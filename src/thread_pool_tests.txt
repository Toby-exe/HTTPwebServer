#include <time.h>   //for testing
#include "pool.h"

void sleep_random(void *arg) 
{
    int *num = (int *)arg;
    int sleep_time = rand() % 5 + 1;  // Random number between 1 and 5
    printf("Task %d: Sleeping for %d seconds\n", *num, sleep_time);
    sleep(sleep_time);
    printf("Task %d: Finished sleeping\n", *num);
}

int main() 
{
    srand(time(NULL));  // Seed the random number generator

    // Create a thread pool with 8 worker threads
    ThreadPool *pool = thread_pool_create(8);

    // Create some tasks and add them to the thread pool
    int nums[5000];
    for (int i = 0; i < 5000; i++) {
        nums[i] = i;
        thread_pool_add_task(pool, sleep_random, &nums[i]);
    }

    // Wait for all tasks to complete
    thread_pool_wait(pool);

    // Destroy the thread pool
    thread_pool_destroy(pool);

    return 0;
}